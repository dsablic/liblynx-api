# encoding: utf-8
# frozen_string_literal: true

#
# WARNING: Do not edit by hand, this file was generated by Heroics:
#
#   https://github.com/interagent/heroics
#

require 'heroics'
require 'uri'
require 'moneta'

module LibLynxAPI
  # Get a Client configured to use HTTP Basic or header-based authentication.
  #
  # @param api_key [String] The API key to use when connecting.
  # @param options [Hash<Symbol,String>] Optionally, custom settings
  #   to use with the client.  Allowed options are `default_headers`,
  #   `cache`, `user` and `url`.
  # @return [Client] A client configured to use the API with HTTP Basic
  #   or header-based authentication.
  def self.connect(api_key, options=nil)
    options = custom_options(options)
    uri = URI.parse(options[:url])

    if options[:user]
      uri.user = URI.encode_www_form_component options[:user]
    end

    if api_key
      uri.user ||= 'user'
      uri.password = api_key
    end

    client = Heroics.client_from_schema(SCHEMA, uri.to_s, options)
    Client.new(client)
  end

  # Get a Client configured to use OAuth authentication.
  #
  # @param oauth_token [String] The OAuth token to use with the API.
  # @param options [Hash<Symbol,String>] Optionally, custom settings
  #   to use with the client.  Allowed options are `default_headers`,
  #   `cache` and `url`.
  # @return [Client] A client configured to use the API with OAuth
  #   authentication.
  def self.connect_oauth(oauth_token, options=nil)
    options = custom_options(options)
    url = options[:url]
    client = Heroics.oauth_client_from_schema(oauth_token, SCHEMA, url, options)
    Client.new(client)
  end

  # Get a Client configured to use Token authentication.
  #
  # @param token [String] The token to use with the API.
  # @param options [Hash<Symbol,String>] Optionally, custom settings
  #   to use with the client.  Allowed options are `default_headers`,
  #   `cache` and `url`.
  # @return [Client] A client configured to use the API with OAuth
  #   authentication.
  def self.connect_token(token, options=nil)
    options = custom_options(options)
    url = options[:url]
    client = Heroics.token_client_from_schema(token, SCHEMA, url, options)
    Client.new(client)
  end

  # Get customized options.
  def self.custom_options(options)
    return default_options if options.nil?

    final_options = default_options
    if options[:default_headers]
      final_options[:default_headers].merge!(options[:default_headers])
    end
    final_options[:cache] = options[:cache] || Moneta.new(:File, dir: "#{Dir.home}/.heroics/liblynx-api")
    final_options[:url] = options[:url] if options[:url]
    final_options[:user] = options[:user] if options[:user]
    final_options
  end

  # Get the default options.
  def self.default_options
    default_headers = {"Accept"=>"application/json", "User-Agent"=>"liblynx-api/0.0.1"}
    {
      default_headers: default_headers,
      url:             "https://connect.liblynx.com"
    }
  end

  private_class_method :default_options, :custom_options

  # LibLynx API schema
  class Client
    def initialize(client)
      @client = client
    end

    # 
    #
    # @return [Token]
    def token
      @token_resource ||= Token.new(@client)
    end
  end

  private

  # 
  class Token
    def initialize(client)
      @client = client
    end

    # Create a new oauth2 token
    #
    # @param body: the object to pass as the request payload
    def create(body = {})
      @client.token.create(body)
    end
  end

  SCHEMA = Heroics::Schema.new(MultiJson.load(<<-'HEROICS_SCHEMA'))
{
  "$schema": "http://interagent.github.io/interagent-hyper-schema",
  "type": [
    "object"
  ],
  "definitions": {
    "token": {
      "$schema": "http://json-schema.org/draft-04/hyper-schema",
      "title": "OAuth2 token",
      "description": "",
      "stability": "prototype",
      "strictProperties": true,
      "type": [
        "object"
      ],
      "definitions": {
        "grant_type": {
          "description": "Token grant type",
          "readOnly": true,
          "type": [
            "string"
          ]
        }
      },
      "links": [
        {
          "description": "Create a new oauth2 token",
          "encType": "application/x-www-form-urlencoded",
          "href": "/oauth/v2/token",
          "method": "POST",
          "rel": "create",
          "schema": {
            "properties": {
              "grant_type": {
                "$ref": "#/definitions/token/definitions/name"
              }
            },
            "type": [
              "object"
            ]
          },
          "title": "Create"
        }
      ],
      "properties": {
        "grant_type": {
          "$ref": "#/definitions/token/definitions/name"
        }
      }
    }
  },
  "properties": {
    "token": {
      "$ref": "#/definitions/token"
    }
  },
  "description": "LibLynx API schema",
  "id": "http://connect.liblynx.com/schema#",
  "links": [
    {
      "href": "https://connect.liblynx.com",
      "rel": "self"
    }
  ],
  "title": "LibLynx API"
}
HEROICS_SCHEMA
end
